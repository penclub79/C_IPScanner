#pragma once
#include "stdafx.h"

typedef enum  _tagQUEUEMESSAGE_ID
{
	MESSAGE_CONNECT_FOR_START					= 0,
	MESSAGE_CONNECT_FOR_RESTART					,
	MESSAGE_CONNECT_FOR_VERIONCHECK				,
	MESSAGE_CONNECT_FOR_SW_UPGRADE_WITHOUT_MCU	,
	MESSAGE_SEND_REQ_UPGRADE_START				,
	MESSAGE_AUTHENTIFICATION_FAIL				,
	MESSAGE_SEND_UPGRADE_SW_FILE				, 
	MESSAGE_SEND_UPGRADE_SW_FILE_RESTART_WAIT	, 
	MESSAGE_WAIT_FOR_SW_FILE_TRANSFERING		,
	MESSAGE_WAIT_FOR_MCU_FILE_TRANSFERING		,
	MESSAGE_WAIT_FOR_UPGRADE_READY				,
	MESSAGE_WAIT_FOR_REBOOT_VERSIONCHECK		,
	MESSAGE_WAIT_FOR_REBOOT_NOT_ENOUGHMEMORY	,
	MESSAGE_WAIT_FOR_REBOOT_FILE_NOT_EXIST		,
	MESSAGE_WAIT_FOR_REBOOT_FILE_NOT_EXIST_MCU	,
	MESSAGE_WAIT_FOR_RETRAY_UPGRADE				,
	MESSAGE_ERROR_AUTHORITY						,
	MESSAGE_ERROR_INVALID_FIRMWARE				,
	MESSAGE_ERROR_NO_MATCH_MODEL				,
	MESSAGE_ERROR_NO_MATCH_VERSION				,
	MESSAGE_ERROR_BAD_COMMAND					,
	MESSAGE_ERROR_TIMEOUT						,
	MESSAGE_ERROR_DISCONNECTED					,
	MESSAGE_UPGRADE_READY						,
	MESSAGE_UPGRADE_COMPLETE					,
	MESSAGE_ERROR_PROTOCAL_MCU_INFO				,
	MESSAGE_SEND_REQ_UPGRADE_MCU_START			,
	MESSAGE_SEND_UPGRADE_MCU_FILE			,
	MESSAGE_SEND_UPGRADE_MCU_FILE_RESTART_WAIT	,	 

}QUEUEMESSAGE_ID;	

typedef struct MESSAGE_QUEUE_ITEM
{	
	int				iCommandID;
	int				iArg1;
	int				iArg2;

} 	MESSAGE_QUEUE_ITEM;

#define MAX_MESSAGE_QUEUE_COUNT			10

class CMessageQueue
{
public:
	CMessageQueue(void);
	~CMessageQueue(void);
	BOOL PushQueue    ( MESSAGE_QUEUE_ITEM  QueueItem );
	BOOL PopQueue     ( MESSAGE_QUEUE_ITEM* QueueItem );
	BOOL GetFirstQueue( MESSAGE_QUEUE_ITEM* QueueItem );
	BOOL InitQueue    ( void );
	BOOL UnInitQueue  ( void );
	BOOL IsQueueFull  ( void );
	BOOL IsEmpty      ( void );
	int GetQueueCount ( void );

	int m_iRear;
	int m_iFront;

	MESSAGE_QUEUE_ITEM      m_aMessageQueueItem[MAX_MESSAGE_QUEUE_COUNT];
	HANDLE                  m_hMutex;
};